{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  mainObj: any = {};\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  myOTP: any;\r\n  ngAfterViewInit() {\r\n    if ('OTPCredential' in window) {\r\n      this.mainObj.isWebOtpSupported = true;\r\n\r\n      const ac = new AbortController();\r\n      debugger;\r\n\r\n      var reqObj = {\r\n        otp: { transport: ['sms'] },\r\n        signal: ac.signal,\r\n      };\r\n      navigator.credentials\r\n        .get(reqObj)\r\n        .then((otp: any) => {\r\n          debugger;\r\n          console.log(otp, 'OTP');\r\n          if (otp) {\r\n            if (otp && otp.code) {\r\n              this.myOTP = otp.code;\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          debugger;\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      debugger;\r\n      console.log(\"Error,No web API\")\r\n      this.mainObj.isWebOtpSupported = false;\r\n    }\r\n  }\r\n}\r\n","\r\n<div class=\"container\">\r\n  <div class=\"borderSection checkInternet\">\r\n      <div>\r\n        <label><b>The simplest Web OTP API demo:</b></label>\r\n        <br>\r\n        <label *ngIf=\"!mainObj.isWebOtpSupported\" style=\"color: red;\">\r\n            Web OTP API not supported, Please enter manually.\r\n        </label>\r\n      </div> \r\n        <div>\r\n          Process Exp: Send an SMS that includes <br>\r\n          <pre><code>\r\n              Your OTP is: 123456.\r\n              @sajademsyne.github.io #12345</code></pre> to this phone.\r\n        </div>\r\n        <div style=\"border:1px solid; padding: 5px; margin: 10px 0;\">\r\n          <form action=\"ngPwaApp/test\" method=\"post\">\r\n            Enter OTP here:\r\n            <input type=\"text\" autocomplete=\"one-time-code\" inputmode=\"numeric\" name=\"one-time-code\"\r\n            [(ngModel)]=\"myOTP\" >\r\n            <input type=\"submit\" value=\"Submit\">\r\n          </form>\r\n        </div>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule  } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}